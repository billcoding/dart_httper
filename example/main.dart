import 'dart:convert';
import 'package:httphelper/httphelper.dart';

void main() async {
  var result = await TestApi.get(
    callback200: (t) async => print('$t'),
    callbackOther: (t, str) async => print('t: $t, error: $str'),
  );
  print('$result');
}

/*
response raw json from server:

{
    "code": 200,
    "data": {
        "id": 1000,
        "name": "your-name"
    }
}
*/
abstract class TestApi {
  static Future<Model<Test>> get({
    Callback200<Test>? callback200,
    Callback404<Test>? callback404,
    CallbackOther<Test>? callbackOther,
  }) async =>
      await Http.get(
        '/api/echo',
        Test.fromMap,
        callback200: callback200,
        callback404: callback404,
        callbackOther: callbackOther,
      );
}

/*
Generated by json2dart (https://github.com/billcoding/json2dart)
Created at 2024-07-14T10:36:21
-------------------------------------------------
{
    "id": 1000,
    "name": "waw"
}
*/

class Test {
  final int id;
  final String name;

  const Test(this.id, this.name);

  factory Test.instance() {
    return Test.fromMap({});
  }

  factory Test.fromMap(Map<String, dynamic> m) {
    return Test(
      m.containsKey("id") && m["id"] != null ? m["id"] : 0,
      m.containsKey("name") && m["name"] != null ? m["name"] : "",
    );
  }

  Map<String, dynamic> toMap() {
    return {
      "id": id,
      "name": name,
    };
  }

  Map<String, dynamic> toOriginalMap() {
    return {
      "id": id,
      "name": name,
    };
  }

  String toJson() {
    return jsonEncode(toMap());
  }

  String toOriginalJson() {
    return jsonEncode(toOriginalMap());
  }

  @override
  String toString() {
    return '{id: $id, name: $name}';
  }
}
